SETTING ALIAS
-----
#alias docker "d"

SETUP
----
// See Version
$docker -version

HELP
-----

SEARCH
----

IMAGES...

//search image in the docker hub, not local
$ docker search mysql
//List all docker images in the machine
$ docker images

//Sort docker images with size in ascending order
$docker images --format "{{.ID}}\t{{.Size}}\t{{.Repository}}" | sort -k 2 -h -r

Serach for docker images in machine
$ docker images | grep mysql


CONTAINERS.....

//list containers
$ docker ps -all 

//show active image onlye
$ docker ps


ADD
----
//to pull image in the local machine, pulling won't run container or instanc of image
$docker pull mysql

RUN
----
run = images->container
exec = container

//This will run the docker images as a container 
$ docker run nginx  //runs with default name, mode, 

//run docker with custom nae name, if verion
$ docker run --name sandy_nginx nginx

//runs docker with custom name, in a deattached (background process) and opens bash script in the cotainer
$docker run --name docker-nginx -d -it nginx /bin/bash

//Get into docker teminal
//names or container id is ok
$docker run -it nginx /bin/bash.  

//Run bash script in already running container
$docker exec nginx ls

//Run and Expose app in port
//docker run -p [host-local-machine-port]:[container-port]
$docker run -p 8080:80
after this : localhost:8080/ will access the page

//To see the container hosts
$docker ps.  // PORTS will be 80/tcp like so



UPDATE
----



DELETE
------
IMAGES...
  $docker rmi image_ID

  
CONTAINERS....
// will remove stopped containers, network not used by any containers, dangling image, dangling build cache and free some space
  $docker system prune  
// Dangling= image not tagged by user
// Unused = images not used in any conatainers
  
  //Remove all containers and Images 
  $docker system prune -a //remove all images

see Dangling Images
$docker images -f dangling=true

CAUSION
Remove containers and then images in Test env, Prod not recommended
$docker rm -vf $(docker ps -aq) //remove all containers
$docker rmi -f $(docker images -aq) //remove all images


